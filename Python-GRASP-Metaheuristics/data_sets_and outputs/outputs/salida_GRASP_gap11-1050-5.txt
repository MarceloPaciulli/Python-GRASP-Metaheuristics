Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 25 2016, 22:18:55) [MSC v.1900 64 bit (AMD64)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> 
 RESTART: C:\Users\Marcelo\Desktop\Metaheurísticas\Trabajo Final - Curso de Posgrado - 2016\Code\GRASP_to_maximize\GRASP to maximize\main_GRASP.py 
wait for initial solution.....


seed was found!


Calculating...


Ingrese iteraciones máximas: 70



Ingrese valor de alfa (0.9-1.0): 0.9



search for optimal solutions....


############################################################


best benefit in 6.9417 segundos:  973.0


############################################################


best benefit in 7.7693 segundos:  994.0


############################################################


best benefit in 8.6859 segundos:  1009.0


############################################################


best benefit in 9.6144 segundos:  1024.0


############################################################


best benefit in 10.4604 segundos:  1039.0


############################################################


best benefit in 11.3099 segundos:  1049.0


############################################################


best benefit in 12.128 segundos:  1054.0


############################################################


best benefit in 12.9869 segundos:  1064.0


############################################################


best benefit in 13.8067 segundos:  1069.0


############################################################


best benefit in 14.829 segundos:  1073.0


############################################################


best benefit in 15.7517 segundos:  1079.0


############################################################


best benefit in 16.614 segundos:  1086.0


############################################################


best benefit in 17.4362 segundos:  1090.0


############################################################


best benefit in 18.2729 segundos:  1094.0


############################################################


best benefit in 19.1297 segundos:  1099.0


############################################################


best benefit in 19.9546 segundos:  1105.0


############################################################


best benefit in 20.8766 segundos:  1108.0


############################################################


best benefit in 21.6983 segundos:  1108.0


############################################################


best benefit in 22.5558 segundos:  1120.0


############################################################


best benefit in 23.3759 segundos:  1120.0


############################################################


best benefit in 24.1986 segundos:  1120.0


############################################################


best benefit in 25.019 segundos:  1120.0


############################################################


best benefit in 25.9404 segundos:  1120.0


############################################################


best benefit in 26.7856 segundos:  1120.0


############################################################


best benefit in 27.652 segundos:  1122.0


############################################################


best benefit in 28.4677 segundos:  1126.0


############################################################


best benefit in 29.2817 segundos:  1128.0


############################################################


best benefit in 30.0973 segundos:  1129.0


############################################################


best benefit in 30.9422 segundos:  1130.0


############################################################


best benefit in 31.6878 segundos:  1131.0


############################################################


best benefit in 32.5911 segundos:  1138.0


############################################################


best benefit in 33.4362 segundos:  1138.0


############################################################


best benefit in 34.2494 segundos:  1138.0


############################################################


best benefit in 35.0623 segundos:  1138.0


############################################################


best benefit in 35.8781 segundos:  1138.0


############################################################


best benefit in 36.7943 segundos:  1138.0


############################################################


best benefit in 37.6081 segundos:  1138.0


############################################################


best benefit in 38.422 segundos:  1138.0


############################################################


best benefit in 39.3795 segundos:  1138.0


############################################################


best benefit in 40.2001 segundos:  1138.0


############################################################


best benefit in 41.0182 segundos:  1138.0


############################################################


best benefit in 41.845 segundos:  1138.0


############################################################


best benefit in 42.6849 segundos:  1140.0


############################################################


best benefit in 43.4986 segundos:  1140.0


############################################################


best benefit in 44.3168 segundos:  1140.0


############################################################


best benefit in 45.0689 segundos:  1140.0


############################################################


best benefit in 45.9228 segundos:  1140.0


############################################################


best benefit in 46.7386 segundos:  1140.0


############################################################


best benefit in 47.5827 segundos:  1140.0


############################################################


best benefit in 48.4009 segundos:  1140.0


############################################################


best benefit in 49.2603 segundos:  1140.0


############################################################


best benefit in 50.0746 segundos:  1140.0


############################################################


best benefit in 50.897 segundos:  1140.0


############################################################


best benefit in 51.6603 segundos:  1140.0


############################################################


best benefit in 52.475 segundos:  1140.0


############################################################


best benefit in 53.2896 segundos:  1140.0


############################################################


best benefit in 54.1032 segundos:  1140.0


############################################################


best benefit in 54.946 segundos:  1140.0


############################################################


best benefit in 55.7734 segundos:  1141.0


############################################################


best benefit in 56.5889 segundos:  1141.0


############################################################


best benefit in 57.4439 segundos:  1141.0


############################################################


best benefit in 58.2597 segundos:  1141.0


############################################################


best benefit in 59.1787 segundos:  1141.0


############################################################


best benefit in 60.0012 segundos:  1141.0


############################################################


best benefit in 60.8451 segundos:  1143.0


############################################################


best benefit in 61.668 segundos:  1146.0


############################################################


best benefit in 62.49 segundos:  1146.0


############################################################


best benefit in 63.2619 segundos:  1146.0


############################################################


best benefit in 64.0858 segundos:  1146.0


############################################################


best benefit in 64.8128 segundos:  1147.0


############################################################



Mejor solución hallada: 
 
 [[ 0.  1.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  1.  0.  1.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  1.  0.  0.
   0.  0.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.
   0.  0.  0.  1.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  1.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  1.  0.  0.  0.  0.  0.  1.
   0.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  1.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  1.  1.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  1.  0.  0.  0.  0.
   1.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 1.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  1.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  1.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.]
 [ 0.  0.  0.  0.  0.  1.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.
   0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]] 


Tiempo consumido (seg):  64.8346
Ganancia obtenida:  1147.0
Asignaciones Agente-tarea:  

 [(0, 1), (0, 6), (0, 14), (0, 16), (0, 33), (0, 46), (1, 10), (1, 15), (1, 20), (1, 21), (1, 31), (2, 2), (2, 11), (2, 34), (2, 39), (2, 45), (3, 4), (3, 12), (3, 23), (3, 26), (3, 36), (3, 47), (4, 28), (4, 29), (4, 35), (4, 40), (4, 42), (5, 19), (5, 27), (5, 43), (5, 44), (6, 8), (6, 13), (6, 18), (6, 25), (6, 30), (7, 0), (7, 3), (7, 22), (7, 24), (7, 41), (7, 48), (8, 7), (8, 17), (8, 37), (8, 49), (9, 5), (9, 9), (9, 32), (9, 38)] 

 
Cantidad de tareas para cada agente: 

 [6 5 5 6 5 4 5 6 4 4] 


>>> 
